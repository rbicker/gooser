// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/proto/v1/gooser_service.proto

package gooserv1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// generic request containing just an id.
type IdRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IdRequest) Reset()         { *m = IdRequest{} }
func (m *IdRequest) String() string { return proto.CompactTextString(m) }
func (*IdRequest) ProtoMessage()    {}
func (*IdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5fbca08c6b16090c, []int{0}
}

func (m *IdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdRequest.Unmarshal(m, b)
}
func (m *IdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdRequest.Marshal(b, m, deterministic)
}
func (m *IdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdRequest.Merge(m, src)
}
func (m *IdRequest) XXX_Size() int {
	return xxx_messageInfo_IdRequest.Size(m)
}
func (m *IdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IdRequest proto.InternalMessageInfo

func (m *IdRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// generic list request.
type ListRequest struct {
	PageSize             int32    `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken            string   `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	Filter               string   `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5fbca08c6b16090c, []int{1}
}

func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (m *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(m, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

func (m *ListRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *ListRequest) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

type User struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Username             string               `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	Mail                 string               `protobuf:"bytes,5,opt,name=mail,proto3" json:"mail,omitempty"`
	Language             string               `protobuf:"bytes,6,opt,name=language,proto3" json:"language,omitempty"`
	Password             string               `protobuf:"bytes,7,opt,name=password,proto3" json:"password,omitempty"`
	Confirmed            bool                 `protobuf:"varint,8,opt,name=confirmed,proto3" json:"confirmed,omitempty"`
	Roles                []string             `protobuf:"bytes,9,rep,name=roles,proto3" json:"roles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_5fbca08c6b16090c, []int{2}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *User) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *User) GetMail() string {
	if m != nil {
		return m.Mail
	}
	return ""
}

func (m *User) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *User) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *User) GetConfirmed() bool {
	if m != nil {
		return m.Confirmed
	}
	return false
}

func (m *User) GetRoles() []string {
	if m != nil {
		return m.Roles
	}
	return nil
}

type UpdateUserRequest struct {
	User                 *User                 `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	FieldMask            *field_mask.FieldMask `protobuf:"bytes,2,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateUserRequest) Reset()         { *m = UpdateUserRequest{} }
func (m *UpdateUserRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateUserRequest) ProtoMessage()    {}
func (*UpdateUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5fbca08c6b16090c, []int{3}
}

func (m *UpdateUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUserRequest.Unmarshal(m, b)
}
func (m *UpdateUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUserRequest.Marshal(b, m, deterministic)
}
func (m *UpdateUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserRequest.Merge(m, src)
}
func (m *UpdateUserRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateUserRequest.Size(m)
}
func (m *UpdateUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserRequest proto.InternalMessageInfo

func (m *UpdateUserRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *UpdateUserRequest) GetFieldMask() *field_mask.FieldMask {
	if m != nil {
		return m.FieldMask
	}
	return nil
}

type ListUsersResponse struct {
	Users                []*User  `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	PageSize             int32    `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	TotalSize            int32    `protobuf:"varint,4,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListUsersResponse) Reset()         { *m = ListUsersResponse{} }
func (m *ListUsersResponse) String() string { return proto.CompactTextString(m) }
func (*ListUsersResponse) ProtoMessage()    {}
func (*ListUsersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5fbca08c6b16090c, []int{4}
}

func (m *ListUsersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListUsersResponse.Unmarshal(m, b)
}
func (m *ListUsersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListUsersResponse.Marshal(b, m, deterministic)
}
func (m *ListUsersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListUsersResponse.Merge(m, src)
}
func (m *ListUsersResponse) XXX_Size() int {
	return xxx_messageInfo_ListUsersResponse.Size(m)
}
func (m *ListUsersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListUsersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListUsersResponse proto.InternalMessageInfo

func (m *ListUsersResponse) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *ListUsersResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *ListUsersResponse) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListUsersResponse) GetTotalSize() int32 {
	if m != nil {
		return m.TotalSize
	}
	return 0
}

type ChangePasswordRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OldPassword          string   `protobuf:"bytes,2,opt,name=old_password,json=oldPassword,proto3" json:"old_password,omitempty"`
	NewPassword          string   `protobuf:"bytes,3,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangePasswordRequest) Reset()         { *m = ChangePasswordRequest{} }
func (m *ChangePasswordRequest) String() string { return proto.CompactTextString(m) }
func (*ChangePasswordRequest) ProtoMessage()    {}
func (*ChangePasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5fbca08c6b16090c, []int{5}
}

func (m *ChangePasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangePasswordRequest.Unmarshal(m, b)
}
func (m *ChangePasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangePasswordRequest.Marshal(b, m, deterministic)
}
func (m *ChangePasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangePasswordRequest.Merge(m, src)
}
func (m *ChangePasswordRequest) XXX_Size() int {
	return xxx_messageInfo_ChangePasswordRequest.Size(m)
}
func (m *ChangePasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangePasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChangePasswordRequest proto.InternalMessageInfo

func (m *ChangePasswordRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ChangePasswordRequest) GetOldPassword() string {
	if m != nil {
		return m.OldPassword
	}
	return ""
}

func (m *ChangePasswordRequest) GetNewPassword() string {
	if m != nil {
		return m.NewPassword
	}
	return ""
}

type ConfirmMailRequest struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfirmMailRequest) Reset()         { *m = ConfirmMailRequest{} }
func (m *ConfirmMailRequest) String() string { return proto.CompactTextString(m) }
func (*ConfirmMailRequest) ProtoMessage()    {}
func (*ConfirmMailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5fbca08c6b16090c, []int{6}
}

func (m *ConfirmMailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfirmMailRequest.Unmarshal(m, b)
}
func (m *ConfirmMailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfirmMailRequest.Marshal(b, m, deterministic)
}
func (m *ConfirmMailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfirmMailRequest.Merge(m, src)
}
func (m *ConfirmMailRequest) XXX_Size() int {
	return xxx_messageInfo_ConfirmMailRequest.Size(m)
}
func (m *ConfirmMailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfirmMailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConfirmMailRequest proto.InternalMessageInfo

func (m *ConfirmMailRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type ForgotPasswordRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Mail                 string   `protobuf:"bytes,2,opt,name=mail,proto3" json:"mail,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ForgotPasswordRequest) Reset()         { *m = ForgotPasswordRequest{} }
func (m *ForgotPasswordRequest) String() string { return proto.CompactTextString(m) }
func (*ForgotPasswordRequest) ProtoMessage()    {}
func (*ForgotPasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5fbca08c6b16090c, []int{7}
}

func (m *ForgotPasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ForgotPasswordRequest.Unmarshal(m, b)
}
func (m *ForgotPasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ForgotPasswordRequest.Marshal(b, m, deterministic)
}
func (m *ForgotPasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ForgotPasswordRequest.Merge(m, src)
}
func (m *ForgotPasswordRequest) XXX_Size() int {
	return xxx_messageInfo_ForgotPasswordRequest.Size(m)
}
func (m *ForgotPasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ForgotPasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ForgotPasswordRequest proto.InternalMessageInfo

func (m *ForgotPasswordRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ForgotPasswordRequest) GetMail() string {
	if m != nil {
		return m.Mail
	}
	return ""
}

type ResetPasswordRequest struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResetPasswordRequest) Reset()         { *m = ResetPasswordRequest{} }
func (m *ResetPasswordRequest) String() string { return proto.CompactTextString(m) }
func (*ResetPasswordRequest) ProtoMessage()    {}
func (*ResetPasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5fbca08c6b16090c, []int{8}
}

func (m *ResetPasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetPasswordRequest.Unmarshal(m, b)
}
func (m *ResetPasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetPasswordRequest.Marshal(b, m, deterministic)
}
func (m *ResetPasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetPasswordRequest.Merge(m, src)
}
func (m *ResetPasswordRequest) XXX_Size() int {
	return xxx_messageInfo_ResetPasswordRequest.Size(m)
}
func (m *ResetPasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetPasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResetPasswordRequest proto.InternalMessageInfo

func (m *ResetPasswordRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *ResetPasswordRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type Group struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Name                 string               `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Roles                []string             `protobuf:"bytes,5,rep,name=roles,proto3" json:"roles,omitempty"`
	Members              []string             `protobuf:"bytes,6,rep,name=members,proto3" json:"members,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Group) Reset()         { *m = Group{} }
func (m *Group) String() string { return proto.CompactTextString(m) }
func (*Group) ProtoMessage()    {}
func (*Group) Descriptor() ([]byte, []int) {
	return fileDescriptor_5fbca08c6b16090c, []int{9}
}

func (m *Group) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Group.Unmarshal(m, b)
}
func (m *Group) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Group.Marshal(b, m, deterministic)
}
func (m *Group) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Group.Merge(m, src)
}
func (m *Group) XXX_Size() int {
	return xxx_messageInfo_Group.Size(m)
}
func (m *Group) XXX_DiscardUnknown() {
	xxx_messageInfo_Group.DiscardUnknown(m)
}

var xxx_messageInfo_Group proto.InternalMessageInfo

func (m *Group) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Group) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Group) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Group) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Group) GetRoles() []string {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *Group) GetMembers() []string {
	if m != nil {
		return m.Members
	}
	return nil
}

type UpdateGroupRequest struct {
	Group                *Group                `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	FieldMask            *field_mask.FieldMask `protobuf:"bytes,2,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateGroupRequest) Reset()         { *m = UpdateGroupRequest{} }
func (m *UpdateGroupRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateGroupRequest) ProtoMessage()    {}
func (*UpdateGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5fbca08c6b16090c, []int{10}
}

func (m *UpdateGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateGroupRequest.Unmarshal(m, b)
}
func (m *UpdateGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateGroupRequest.Marshal(b, m, deterministic)
}
func (m *UpdateGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateGroupRequest.Merge(m, src)
}
func (m *UpdateGroupRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateGroupRequest.Size(m)
}
func (m *UpdateGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateGroupRequest proto.InternalMessageInfo

func (m *UpdateGroupRequest) GetGroup() *Group {
	if m != nil {
		return m.Group
	}
	return nil
}

func (m *UpdateGroupRequest) GetFieldMask() *field_mask.FieldMask {
	if m != nil {
		return m.FieldMask
	}
	return nil
}

type ListGroupsResponse struct {
	Groups               []*Group `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	PageSize             int32    `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	TotalSize            int32    `protobuf:"varint,4,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListGroupsResponse) Reset()         { *m = ListGroupsResponse{} }
func (m *ListGroupsResponse) String() string { return proto.CompactTextString(m) }
func (*ListGroupsResponse) ProtoMessage()    {}
func (*ListGroupsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5fbca08c6b16090c, []int{11}
}

func (m *ListGroupsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListGroupsResponse.Unmarshal(m, b)
}
func (m *ListGroupsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListGroupsResponse.Marshal(b, m, deterministic)
}
func (m *ListGroupsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListGroupsResponse.Merge(m, src)
}
func (m *ListGroupsResponse) XXX_Size() int {
	return xxx_messageInfo_ListGroupsResponse.Size(m)
}
func (m *ListGroupsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListGroupsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListGroupsResponse proto.InternalMessageInfo

func (m *ListGroupsResponse) GetGroups() []*Group {
	if m != nil {
		return m.Groups
	}
	return nil
}

func (m *ListGroupsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *ListGroupsResponse) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListGroupsResponse) GetTotalSize() int32 {
	if m != nil {
		return m.TotalSize
	}
	return 0
}

func init() {
	proto.RegisterType((*IdRequest)(nil), "gooser.v1.IdRequest")
	proto.RegisterType((*ListRequest)(nil), "gooser.v1.ListRequest")
	proto.RegisterType((*User)(nil), "gooser.v1.User")
	proto.RegisterType((*UpdateUserRequest)(nil), "gooser.v1.UpdateUserRequest")
	proto.RegisterType((*ListUsersResponse)(nil), "gooser.v1.ListUsersResponse")
	proto.RegisterType((*ChangePasswordRequest)(nil), "gooser.v1.ChangePasswordRequest")
	proto.RegisterType((*ConfirmMailRequest)(nil), "gooser.v1.ConfirmMailRequest")
	proto.RegisterType((*ForgotPasswordRequest)(nil), "gooser.v1.ForgotPasswordRequest")
	proto.RegisterType((*ResetPasswordRequest)(nil), "gooser.v1.ResetPasswordRequest")
	proto.RegisterType((*Group)(nil), "gooser.v1.Group")
	proto.RegisterType((*UpdateGroupRequest)(nil), "gooser.v1.UpdateGroupRequest")
	proto.RegisterType((*ListGroupsResponse)(nil), "gooser.v1.ListGroupsResponse")
}

func init() {
	proto.RegisterFile("api/proto/v1/gooser_service.proto", fileDescriptor_5fbca08c6b16090c)
}

var fileDescriptor_5fbca08c6b16090c = []byte{
	// 857 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x55, 0x5f, 0x6f, 0xdc, 0x44,
	0x10, 0xbf, 0x7f, 0xbe, 0x9c, 0xc7, 0xb4, 0xa5, 0xab, 0x34, 0xb2, 0x2e, 0x8d, 0x7a, 0x5d, 0x44,
	0x15, 0xf1, 0x70, 0x21, 0x29, 0x2f, 0x48, 0x54, 0xa2, 0x84, 0xe6, 0x00, 0xb5, 0x52, 0x65, 0xda,
	0x17, 0x5e, 0x4e, 0x9b, 0x78, 0xce, 0x58, 0xb1, 0xbd, 0xc6, 0xbb, 0x97, 0x40, 0xbe, 0x06, 0xef,
	0x3c, 0xf0, 0xc4, 0xd7, 0xe1, 0x1b, 0xa1, 0xdd, 0xb5, 0xcf, 0x7f, 0xef, 0x78, 0x40, 0x42, 0x7d,
	0xf3, 0xcc, 0xfc, 0x66, 0x76, 0x76, 0xf6, 0x37, 0x3f, 0xc3, 0x53, 0x96, 0x86, 0x27, 0x69, 0xc6,
	0x25, 0x3f, 0xb9, 0x39, 0x3d, 0x09, 0x38, 0x17, 0x98, 0x2d, 0x05, 0x66, 0x37, 0xe1, 0x15, 0xce,
	0xb5, 0x9f, 0xd8, 0xc6, 0x3b, 0xbf, 0x39, 0x9d, 0x1e, 0x06, 0x9c, 0x07, 0x11, 0x9a, 0x84, 0xcb,
	0xf5, 0xea, 0x04, 0xe3, 0x54, 0xfe, 0x66, 0x70, 0xd3, 0x59, 0x33, 0xb8, 0x0a, 0x31, 0xf2, 0x97,
	0x31, 0x13, 0xd7, 0x39, 0xe2, 0x49, 0x13, 0x21, 0xc3, 0x18, 0x85, 0x64, 0x71, 0x6a, 0x00, 0xf4,
	0x10, 0xec, 0xef, 0x7d, 0x0f, 0x7f, 0x59, 0xa3, 0x90, 0xe4, 0x3e, 0x0c, 0x42, 0xdf, 0xed, 0xcf,
	0xfa, 0xc7, 0xb6, 0x37, 0x08, 0x7d, 0xca, 0xc0, 0x79, 0x1d, 0x0a, 0x59, 0x84, 0x0f, 0xc1, 0x4e,
	0x59, 0x80, 0x4b, 0x11, 0xde, 0xa1, 0x46, 0x59, 0xde, 0x44, 0x39, 0x7e, 0x0c, 0xef, 0x90, 0x1c,
	0x01, 0xe8, 0xa0, 0xe4, 0xd7, 0x98, 0xb8, 0x03, 0x5d, 0x43, 0xc3, 0xdf, 0x29, 0x07, 0x39, 0x80,
	0xf1, 0x2a, 0x8c, 0x24, 0x66, 0xee, 0x50, 0x87, 0x72, 0x8b, 0xfe, 0x35, 0x80, 0xd1, 0x7b, 0x81,
	0x59, 0xf3, 0x6c, 0xf2, 0x25, 0xc0, 0x55, 0x86, 0x4c, 0xa2, 0xbf, 0x64, 0x52, 0xd7, 0x73, 0xce,
	0xa6, 0x73, 0x73, 0x9d, 0x79, 0x71, 0x9d, 0xf9, 0xbb, 0xe2, 0x3a, 0x9e, 0x9d, 0xa3, 0x5f, 0x4a,
	0x95, 0xba, 0x4e, 0xfd, 0x22, 0x75, 0xf8, 0xef, 0xa9, 0x39, 0xfa, 0xa5, 0x24, 0x53, 0x98, 0xac,
	0x05, 0x66, 0x09, 0x8b, 0xd1, 0x1d, 0xe9, 0x5e, 0x36, 0x36, 0x21, 0x30, 0x8a, 0x59, 0x18, 0xb9,
	0x96, 0xf6, 0xeb, 0x6f, 0x85, 0x8f, 0x58, 0x12, 0xac, 0x59, 0x80, 0xee, 0xd8, 0xe0, 0x0b, 0x5b,
	0xc5, 0x52, 0x26, 0xc4, 0x2d, 0xcf, 0x7c, 0x77, 0xcf, 0xc4, 0x0a, 0x9b, 0x3c, 0x06, 0xfb, 0x8a,
	0x27, 0xab, 0x30, 0x8b, 0xd1, 0x77, 0x27, 0xb3, 0xfe, 0xf1, 0xc4, 0x2b, 0x1d, 0x64, 0x1f, 0xac,
	0x8c, 0x47, 0x28, 0x5c, 0x7b, 0x36, 0x3c, 0xb6, 0x3d, 0x63, 0x50, 0x01, 0x0f, 0xdf, 0xeb, 0x46,
	0xd5, 0xbc, 0x8a, 0x37, 0xf9, 0x04, 0x46, 0xaa, 0x41, 0x3d, 0x38, 0xe7, 0xec, 0xc1, 0x7c, 0xc3,
	0x9c, 0xb9, 0x46, 0xe9, 0xa0, 0x1a, 0x48, 0xc9, 0x8c, 0xad, 0xb3, 0xbc, 0x50, 0x90, 0x37, 0x4c,
	0x5c, 0x7b, 0xf6, 0xaa, 0xf8, 0xa4, 0x7f, 0xf4, 0xe1, 0xa1, 0xe2, 0x80, 0xaa, 0x26, 0x3c, 0x14,
	0x29, 0x4f, 0x04, 0x92, 0x4f, 0xc1, 0x52, 0x85, 0x85, 0xdb, 0x9f, 0x0d, 0xbb, 0x8e, 0x35, 0x51,
	0xf2, 0x0c, 0x1e, 0x24, 0xf8, 0xab, 0x5c, 0xb6, 0x88, 0x71, 0x4f, 0xb9, 0xdf, 0x6e, 0xc8, 0x51,
	0x23, 0xd6, 0xb0, 0x4d, 0x2c, 0xc9, 0x25, 0x8b, 0x4c, 0x74, 0xa4, 0xa3, 0xb6, 0xf6, 0xa8, 0x30,
	0x8d, 0xe1, 0xd1, 0xf9, 0xcf, 0x2c, 0x09, 0xf0, 0x6d, 0x3e, 0xdb, 0x2d, 0x64, 0x26, 0x4f, 0xe1,
	0x23, 0x1e, 0xf9, 0xcb, 0xcd, 0x93, 0x98, 0x4e, 0x1c, 0x1e, 0xf9, 0x45, 0xa6, 0x82, 0x24, 0x78,
	0x5b, 0x42, 0x0c, 0x55, 0x9d, 0x04, 0x6f, 0x0b, 0x08, 0xfd, 0x0c, 0xc8, 0xb9, 0x79, 0xa7, 0x37,
	0x2c, 0x8c, 0x8a, 0xb3, 0xf6, 0xc1, 0x32, 0xd7, 0x33, 0xc7, 0x19, 0x83, 0x2e, 0xe0, 0xd1, 0x05,
	0xcf, 0x02, 0x2e, 0x9b, 0xad, 0x55, 0x59, 0xd6, 0xdf, 0xc2, 0xb2, 0x41, 0xc9, 0x32, 0xfa, 0x1d,
	0xec, 0x7b, 0x28, 0xb0, 0x55, 0xa7, 0xf3, 0xd8, 0x1a, 0xef, 0x06, 0x75, 0xde, 0xd1, 0xbf, 0xfb,
	0x60, 0x2d, 0x32, 0xbe, 0x4e, 0x3f, 0x90, 0x7d, 0x23, 0x30, 0xaa, 0xec, 0x9a, 0xfe, 0x2e, 0xd9,
	0x6f, 0x55, 0xd8, 0x4f, 0x5c, 0xd8, 0x8b, 0x31, 0xbe, 0x54, 0xa4, 0x1b, 0x6b, 0x7f, 0x61, 0xd2,
	0x5b, 0x20, 0x66, 0x2f, 0xf4, 0xc5, 0x8a, 0xd9, 0x3c, 0x03, 0x2b, 0x50, 0x76, 0xbe, 0x19, 0x1f,
	0x57, 0x28, 0x6a, 0x70, 0x26, 0xfc, 0x5f, 0x76, 0xe3, 0xcf, 0x3e, 0x10, 0xb5, 0x1b, 0xba, 0x5e,
	0xb9, 0x1c, 0xc7, 0x30, 0xd6, 0xa5, 0x8b, 0xed, 0x68, 0x1f, 0x9d, 0xc7, 0xff, 0x8f, 0xfd, 0x38,
	0xfb, 0x7d, 0x0f, 0xc6, 0x0b, 0x7d, 0x3e, 0x39, 0x07, 0x7b, 0xb3, 0xca, 0xe4, 0xa0, 0xd2, 0x55,
	0x45, 0xe4, 0xa7, 0x8f, 0x1b, 0xfe, 0xda, 0xe2, 0xd3, 0x1e, 0x39, 0x83, 0xbd, 0x05, 0x6a, 0x2f,
	0xd9, 0xaf, 0x40, 0x37, 0x3f, 0x91, 0x69, 0x53, 0x0c, 0x68, 0x8f, 0x7c, 0x0e, 0x70, 0xae, 0xd9,
	0xa2, 0xd3, 0x9a, 0x80, 0xae, 0x8c, 0x17, 0x00, 0xa5, 0xd6, 0x91, 0x6a, 0x4f, 0x2d, 0x09, 0xec,
	0x4a, 0xff, 0x0a, 0xe0, 0x5b, 0x8c, 0x30, 0x4f, 0xef, 0xee, 0xf3, 0xa0, 0xf5, 0xc8, 0xaf, 0xd4,
	0xaf, 0x95, 0xf6, 0xc8, 0x6b, 0xb8, 0x5f, 0x97, 0x14, 0x32, 0xab, 0x54, 0xe8, 0x54, 0x9b, 0x1d,
	0xd5, 0x2e, 0xc0, 0xa9, 0x28, 0x06, 0x39, 0xaa, 0x96, 0x6a, 0x29, 0xc9, 0xee, 0xae, 0xea, 0x6a,
	0x52, 0xeb, 0xaa, 0x53, 0x68, 0x76, 0x54, 0xfb, 0x01, 0xee, 0xd5, 0x24, 0x85, 0x3c, 0xa9, 0x14,
	0xeb, 0x12, 0x9b, 0x1d, 0xb5, 0x5e, 0x01, 0x94, 0x6b, 0xb0, 0x95, 0x58, 0x47, 0x0d, 0x7f, 0x7d,
	0x6b, 0x68, 0x8f, 0x7c, 0x01, 0x93, 0x05, 0x1a, 0xf7, 0x96, 0x27, 0x6b, 0x6d, 0x12, 0xed, 0x91,
	0xe7, 0xe0, 0x18, 0x6e, 0x99, 0xc4, 0x16, 0xa4, 0x33, 0xe9, 0x6b, 0x70, 0x2a, 0x92, 0x51, 0x7b,
	0x93, 0xb6, 0x94, 0x74, 0x56, 0x78, 0x01, 0x8e, 0x61, 0xd8, 0xae, 0x7e, 0xb7, 0x8e, 0xec, 0x1b,
	0xf8, 0x69, 0x62, 0x12, 0x6e, 0x4e, 0x2f, 0xc7, 0x3a, 0xfa, 0xfc, 0x9f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x25, 0xfb, 0x26, 0x8e, 0x19, 0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GooserClient is the client API for Gooser service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GooserClient interface {
	// List users.
	ListUsers(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListUsersResponse, error)
	// Gets a user.
	GetUser(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*User, error)
	// Creates a user.
	CreateUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error)
	// Updates a user.
	UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*User, error)
	// Deletes a user.
	DeleteUser(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Change password.
	ChangePassword(ctx context.Context, in *ChangePasswordRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Confirm Mail.
	ConfirmMail(ctx context.Context, in *ConfirmMailRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Forgot Password.
	ForgotPassword(ctx context.Context, in *ForgotPasswordRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Reset Password.
	ResetPassword(ctx context.Context, in *ResetPasswordRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// List groups.
	ListGroups(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListGroupsResponse, error)
	// Gets a group.
	GetGroup(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*Group, error)
	// Creates a group.
	CreateGroup(ctx context.Context, in *Group, opts ...grpc.CallOption) (*Group, error)
	// Updates a group.
	UpdateGroup(ctx context.Context, in *UpdateGroupRequest, opts ...grpc.CallOption) (*Group, error)
	// Deletes a group.
	DeleteGroup(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type gooserClient struct {
	cc grpc.ClientConnInterface
}

func NewGooserClient(cc grpc.ClientConnInterface) GooserClient {
	return &gooserClient{cc}
}

func (c *gooserClient) ListUsers(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListUsersResponse, error) {
	out := new(ListUsersResponse)
	err := c.cc.Invoke(ctx, "/gooser.v1.Gooser/ListUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gooserClient) GetUser(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/gooser.v1.Gooser/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gooserClient) CreateUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/gooser.v1.Gooser/CreateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gooserClient) UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/gooser.v1.Gooser/UpdateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gooserClient) DeleteUser(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/gooser.v1.Gooser/DeleteUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gooserClient) ChangePassword(ctx context.Context, in *ChangePasswordRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/gooser.v1.Gooser/ChangePassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gooserClient) ConfirmMail(ctx context.Context, in *ConfirmMailRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/gooser.v1.Gooser/ConfirmMail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gooserClient) ForgotPassword(ctx context.Context, in *ForgotPasswordRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/gooser.v1.Gooser/ForgotPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gooserClient) ResetPassword(ctx context.Context, in *ResetPasswordRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/gooser.v1.Gooser/ResetPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gooserClient) ListGroups(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListGroupsResponse, error) {
	out := new(ListGroupsResponse)
	err := c.cc.Invoke(ctx, "/gooser.v1.Gooser/ListGroups", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gooserClient) GetGroup(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*Group, error) {
	out := new(Group)
	err := c.cc.Invoke(ctx, "/gooser.v1.Gooser/GetGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gooserClient) CreateGroup(ctx context.Context, in *Group, opts ...grpc.CallOption) (*Group, error) {
	out := new(Group)
	err := c.cc.Invoke(ctx, "/gooser.v1.Gooser/CreateGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gooserClient) UpdateGroup(ctx context.Context, in *UpdateGroupRequest, opts ...grpc.CallOption) (*Group, error) {
	out := new(Group)
	err := c.cc.Invoke(ctx, "/gooser.v1.Gooser/UpdateGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gooserClient) DeleteGroup(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/gooser.v1.Gooser/DeleteGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GooserServer is the server API for Gooser service.
type GooserServer interface {
	// List users.
	ListUsers(context.Context, *ListRequest) (*ListUsersResponse, error)
	// Gets a user.
	GetUser(context.Context, *IdRequest) (*User, error)
	// Creates a user.
	CreateUser(context.Context, *User) (*User, error)
	// Updates a user.
	UpdateUser(context.Context, *UpdateUserRequest) (*User, error)
	// Deletes a user.
	DeleteUser(context.Context, *IdRequest) (*empty.Empty, error)
	// Change password.
	ChangePassword(context.Context, *ChangePasswordRequest) (*empty.Empty, error)
	// Confirm Mail.
	ConfirmMail(context.Context, *ConfirmMailRequest) (*empty.Empty, error)
	// Forgot Password.
	ForgotPassword(context.Context, *ForgotPasswordRequest) (*empty.Empty, error)
	// Reset Password.
	ResetPassword(context.Context, *ResetPasswordRequest) (*empty.Empty, error)
	// List groups.
	ListGroups(context.Context, *ListRequest) (*ListGroupsResponse, error)
	// Gets a group.
	GetGroup(context.Context, *IdRequest) (*Group, error)
	// Creates a group.
	CreateGroup(context.Context, *Group) (*Group, error)
	// Updates a group.
	UpdateGroup(context.Context, *UpdateGroupRequest) (*Group, error)
	// Deletes a group.
	DeleteGroup(context.Context, *IdRequest) (*empty.Empty, error)
}

// UnimplementedGooserServer can be embedded to have forward compatible implementations.
type UnimplementedGooserServer struct {
}

func (*UnimplementedGooserServer) ListUsers(ctx context.Context, req *ListRequest) (*ListUsersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListUsers not implemented")
}
func (*UnimplementedGooserServer) GetUser(ctx context.Context, req *IdRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUser not implemented")
}
func (*UnimplementedGooserServer) CreateUser(ctx context.Context, req *User) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUser not implemented")
}
func (*UnimplementedGooserServer) UpdateUser(ctx context.Context, req *UpdateUserRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUser not implemented")
}
func (*UnimplementedGooserServer) DeleteUser(ctx context.Context, req *IdRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteUser not implemented")
}
func (*UnimplementedGooserServer) ChangePassword(ctx context.Context, req *ChangePasswordRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangePassword not implemented")
}
func (*UnimplementedGooserServer) ConfirmMail(ctx context.Context, req *ConfirmMailRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConfirmMail not implemented")
}
func (*UnimplementedGooserServer) ForgotPassword(ctx context.Context, req *ForgotPasswordRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ForgotPassword not implemented")
}
func (*UnimplementedGooserServer) ResetPassword(ctx context.Context, req *ResetPasswordRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResetPassword not implemented")
}
func (*UnimplementedGooserServer) ListGroups(ctx context.Context, req *ListRequest) (*ListGroupsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListGroups not implemented")
}
func (*UnimplementedGooserServer) GetGroup(ctx context.Context, req *IdRequest) (*Group, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGroup not implemented")
}
func (*UnimplementedGooserServer) CreateGroup(ctx context.Context, req *Group) (*Group, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateGroup not implemented")
}
func (*UnimplementedGooserServer) UpdateGroup(ctx context.Context, req *UpdateGroupRequest) (*Group, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateGroup not implemented")
}
func (*UnimplementedGooserServer) DeleteGroup(ctx context.Context, req *IdRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteGroup not implemented")
}

func RegisterGooserServer(s *grpc.Server, srv GooserServer) {
	s.RegisterService(&_Gooser_serviceDesc, srv)
}

func _Gooser_ListUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GooserServer).ListUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gooser.v1.Gooser/ListUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GooserServer).ListUsers(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gooser_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GooserServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gooser.v1.Gooser/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GooserServer).GetUser(ctx, req.(*IdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gooser_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GooserServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gooser.v1.Gooser/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GooserServer).CreateUser(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gooser_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GooserServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gooser.v1.Gooser/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GooserServer).UpdateUser(ctx, req.(*UpdateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gooser_DeleteUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GooserServer).DeleteUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gooser.v1.Gooser/DeleteUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GooserServer).DeleteUser(ctx, req.(*IdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gooser_ChangePassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangePasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GooserServer).ChangePassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gooser.v1.Gooser/ChangePassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GooserServer).ChangePassword(ctx, req.(*ChangePasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gooser_ConfirmMail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfirmMailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GooserServer).ConfirmMail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gooser.v1.Gooser/ConfirmMail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GooserServer).ConfirmMail(ctx, req.(*ConfirmMailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gooser_ForgotPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ForgotPasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GooserServer).ForgotPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gooser.v1.Gooser/ForgotPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GooserServer).ForgotPassword(ctx, req.(*ForgotPasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gooser_ResetPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResetPasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GooserServer).ResetPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gooser.v1.Gooser/ResetPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GooserServer).ResetPassword(ctx, req.(*ResetPasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gooser_ListGroups_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GooserServer).ListGroups(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gooser.v1.Gooser/ListGroups",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GooserServer).ListGroups(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gooser_GetGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GooserServer).GetGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gooser.v1.Gooser/GetGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GooserServer).GetGroup(ctx, req.(*IdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gooser_CreateGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Group)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GooserServer).CreateGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gooser.v1.Gooser/CreateGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GooserServer).CreateGroup(ctx, req.(*Group))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gooser_UpdateGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GooserServer).UpdateGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gooser.v1.Gooser/UpdateGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GooserServer).UpdateGroup(ctx, req.(*UpdateGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gooser_DeleteGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GooserServer).DeleteGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gooser.v1.Gooser/DeleteGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GooserServer).DeleteGroup(ctx, req.(*IdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Gooser_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gooser.v1.Gooser",
	HandlerType: (*GooserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListUsers",
			Handler:    _Gooser_ListUsers_Handler,
		},
		{
			MethodName: "GetUser",
			Handler:    _Gooser_GetUser_Handler,
		},
		{
			MethodName: "CreateUser",
			Handler:    _Gooser_CreateUser_Handler,
		},
		{
			MethodName: "UpdateUser",
			Handler:    _Gooser_UpdateUser_Handler,
		},
		{
			MethodName: "DeleteUser",
			Handler:    _Gooser_DeleteUser_Handler,
		},
		{
			MethodName: "ChangePassword",
			Handler:    _Gooser_ChangePassword_Handler,
		},
		{
			MethodName: "ConfirmMail",
			Handler:    _Gooser_ConfirmMail_Handler,
		},
		{
			MethodName: "ForgotPassword",
			Handler:    _Gooser_ForgotPassword_Handler,
		},
		{
			MethodName: "ResetPassword",
			Handler:    _Gooser_ResetPassword_Handler,
		},
		{
			MethodName: "ListGroups",
			Handler:    _Gooser_ListGroups_Handler,
		},
		{
			MethodName: "GetGroup",
			Handler:    _Gooser_GetGroup_Handler,
		},
		{
			MethodName: "CreateGroup",
			Handler:    _Gooser_CreateGroup_Handler,
		},
		{
			MethodName: "UpdateGroup",
			Handler:    _Gooser_UpdateGroup_Handler,
		},
		{
			MethodName: "DeleteGroup",
			Handler:    _Gooser_DeleteGroup_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/proto/v1/gooser_service.proto",
}
