// Code generated by running "go generate" in golang.org/x/text. DO NOT EDIT.

package store

import (
	"golang.org/x/text/language"
	"golang.org/x/text/message"
	"golang.org/x/text/message/catalog"
)

type dictionary struct {
	index []uint32
	data  string
}

func (d *dictionary) Lookup(key string) (data string, ok bool) {
	p := messageKeyToIndex[key]
	start, end := d.index[p], d.index[p+1]
	if start == end {
		return "", false
	}
	return d.data[start:end], true
}

func init() {
	dict := map[string]catalog.Dictionary{
		"de": &dictionary{index: deIndex, data: deData},
		"en": &dictionary{index: enIndex, data: enData},
	}
	fallback := language.MustParse("en")
	cat, err := catalog.NewFromMap(dict, catalog.Fallback(fallback))
	if err != nil {
		panic(err)
	}
	message.DefaultCatalog = cat
}

var messageKeyToIndex = map[string]int{
	"error while saving group":                     8,
	"error while saving user":                      23,
	"invalid group id '%s'":                        7,
	"invalid id '%s'":                              4,
	"invalid token":                                14,
	"invalid user id":                              24,
	"invalid user id '%s'":                         22,
	"no token given":                               12,
	"the request was canceled by the client":       0,
	"token mismatch":                               13,
	"unable to count groups: %s":                   1,
	"unable to count users: %s":                    17,
	"unable to decode group: %s":                   3,
	"unable to decode user: %s":                    19,
	"unable to encrypt confirmation":               11,
	"unable to encrypt reset password struct":      16,
	"unable to find group named %s":                6,
	"unable to find group with id %s":              5,
	"unable to find group with id '%s'":            9,
	"unable to find user":                          21,
	"unable to find user with given id":            25,
	"unable to find user with id %s":               20,
	"unable to json marshal confirmation":          10,
	"unable to json marshal reset password struct": 15,
	"unable to query groups: %s":                   2,
	"unable to query users: %s":                    18,
}

var deIndex = []uint32{ // 27 elements
	0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000,
} // Size: 132 bytes

const deData string = ""

var enIndex = []uint32{ // 27 elements
	0x00000000, 0x00000027, 0x00000045, 0x00000063,
	0x00000081, 0x00000094, 0x000000b7, 0x000000d8,
	0x000000f1, 0x0000010a, 0x0000012f, 0x00000153,
	0x00000172, 0x00000181, 0x00000190, 0x0000019e,
	0x000001cb, 0x000001f3, 0x00000210, 0x0000022d,
	0x0000024a, 0x0000026c, 0x00000280, 0x00000298,
	0x000002b0, 0x000002c0, 0x000002e2,
} // Size: 132 bytes

const enData string = "" + // Size: 738 bytes
	"\x02the request was canceled by the client\x02unable to count groups: %[" +
	"1]s\x02unable to query groups: %[1]s\x02unable to decode group: %[1]s" +
	"\x02invalid id '%[1]s'\x02unable to find group with id %[1]s\x02unable t" +
	"o find group named %[1]s\x02invalid group id '%[1]s'\x02error while savi" +
	"ng group\x02unable to find group with id '%[1]s'\x02unable to json marsh" +
	"al confirmation\x02unable to encrypt confirmation\x02no token given\x02t" +
	"oken mismatch\x02invalid token\x02unable to json marshal reset password " +
	"struct\x02unable to encrypt reset password struct\x02unable to count use" +
	"rs: %[1]s\x02unable to query users: %[1]s\x02unable to decode user: %[1]" +
	"s\x02unable to find user with id %[1]s\x02unable to find user\x02invalid" +
	" user id '%[1]s'\x02error while saving user\x02invalid user id\x02unable" +
	" to find user with given id"

	// Total table size 1002 bytes (0KiB); checksum: 9588E0B1
